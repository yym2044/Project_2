<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.yym.infra.modules.product.ProductMpp">

	<resultMap id="resultMapObj"
		type="com.yym.infra.modules.product.Product"></resultMap>

	<!-- search화면 start --> 
	<select id="selectList" resultMap="resultMapObj">

		SELECT
			a.trpdSeq
			, a.trpdName
			, a.trpdPrice
			, a.trpdDiscountPercent
			, a.trpdDeliveryFee
			, a.trpdStarRating
			, b.originalName
			, b.uuidName
			, b.path 
	
		<include refid="selectListCommon"/>
		LIMIT #{startRnumForMysql}, #{rowNumToShow}
	</select>
	
	<select id="selectListCount" resultType="Integer">
		SELECT
			count(*)
		<include refid="selectListCommon"/>
	</select>
	
	<sql id="selectListCommon">
		FROM
			tradProduct a
		LEFT JOIN
			tradProductUploaded b
		ON b.pseq = a.trpdSeq
			AND b.defaultNy = 1
			
		WHERE 1=1
			AND trpdDelNy = 0
		
			<choose>
				<when test="shCategory == 0">
					AND (trpdName like concat('%',#{shBar},'%') OR
					trpdTag like concat('%',#{shBar},'%'))
				</when>
				<otherwise>
					AND (trpdName like concat('%',#{shBar},'%') OR trpdTag
					like concat('%',#{shBar},'%'))
					AND trpdCategoryCd2 = #{shCategory}
				</otherwise>

			</choose>
			
		<choose>
			<when test="shSort == 'lowPrice'">
				ORDER BY (trpdPrice * (1-trpdDiscountPercent))
			</when>
			<when test="shSort == 'highPrice'">
				ORDER BY (trpdPrice * (1-trpdDiscountPercent)) DESC
			</when>
			<when test="shSort == 'highStar'">
				ORDER BY trpdStarRating DESC
			</when>
			<when test="shSort == 'latest'">
				ORDER BY a.regDateTime
			</when>
		</choose>
	</sql>
	
	<select id="selectOne" resultMap="resultMapObj">
		SELECT
			trpdSeq
			, trpdName
			, trpdPrice
			, trpdDiscountPercent
			, trpdDeliveryFee
			, trpdStarRating
			
			, (select tropName FROM tradOptionParent WHERE tropSeq = trpdOptionParentCd1) as trpdOptionParentName1
			, (select tropName FROM tradOptionParent WHERE tropSeq = trpdOptionParentCd2) as trpdOptionParentName2
			, (select tropName FROM tradOptionParent WHERE tropSeq = trpdOptionParentCd3) as trpdOptionParentName3
			
			 , trpdOptionParentCd1
			 , trpdOptionParentCd2
			 , trpdOptionParentCd3
			 
			 , trpdCategoryCd1
			 , trpdCategoryCd2
			 , trpdCategoryCd3
			 
			 , trpdDesc
			 
		FROM
			tradProduct
		WHERE 1=1
			AND trpdDelNy = 0
			AND trpdSeq = #{trpdSeq}
			
		
	</select>
	
<!-- 	<select id="selectListCartGeneral" resultMap="resultMapObj">
	
	SELECT
		a.trctSeq
		, a.ifmmSeq
		, c.trpdSeq
		, a.trprSeq
		, a.trctQuantity
		, a.trctDelNy
	    , c.trpdName
	    , b.trprOptionChildCd1
	    , (SELECT trocName FROM tradOptionChild WHERE trocSeq = b.trprOptionChildCd1) as trprOptionChildName1
	    , b.trprOptionChildCd2
	    , (SELECT trocName FROM tradOptionChild WHERE trocSeq = b.trprOptionChildCd2) as trprOptionChildName2
	    , b.trprOptionChildCd3
	    , (SELECT trocName FROM tradOptionChild WHERE trocSeq = b.trprOptionChildCd3) as trprOptionChildName3
	    , b.trprListPrice
	    , b.trprDiscountPrice
	    , c.trpdDeliveryFee
	    , d.uuidName
        , d.path
	FROM
		tradCart a
	LEFT JOIN
		tradProduct_Real b 
	ON 
		b.trprSeq = a.trprSeq
	LEFT JOIN
		tradProduct c
	ON 
		c.trpdSeq = b.trpdSeq
	LEFT JOIN
		tradProductUploaded d
	ON
		d.pseq = c.trpdSeq AND d.defaultNy = 1
	WHERE 1=1
		AND ifmmSeq = #{ifmmSeq}
	
	</select> -->
	<select id="selectListCartGeneral" resultMap="resultMapObj">
	
	SELECT
		a.trctSeq
		, a.ifmmSeq
		, c.trpdSeq
		, a.trprSeq
		, SUM(a.trctQuantity) as trctQuantity
		, a.trctDelNy
	    , c.trpdName
	    , b.trprOptionChildCd1
	    , (SELECT trocName FROM tradOptionChild WHERE trocSeq = b.trprOptionChildCd1) as trprOptionChildName1
	    , b.trprOptionChildCd2
	    , (SELECT trocName FROM tradOptionChild WHERE trocSeq = b.trprOptionChildCd2) as trprOptionChildName2
	    , b.trprOptionChildCd3
	    , (SELECT trocName FROM tradOptionChild WHERE trocSeq = b.trprOptionChildCd3) as trprOptionChildName3
	    , b.trprListPrice
	    , b.trprDiscountPrice
	    , c.trpdDeliveryFee
	    , d.uuidName
        , d.path
	FROM
		tradCart a
	LEFT JOIN
		tradProduct_Real b 
	ON 
		b.trprSeq = a.trprSeq
	LEFT JOIN
		tradProduct c
	ON 
		c.trpdSeq = b.trpdSeq
	LEFT JOIN
		tradProductUploaded d
	ON
		d.pseq = c.trpdSeq AND d.defaultNy = 1
	WHERE 1=1
		AND ifmmSeq = #{ifmmSeq}
	GROUP BY
		a.trprSeq
	
	</select>
	
	<insert id="insertCartGeneral">
	INSERT INTO
		tradCart (
			ifmmSeq
			, trprSeq
			, trctQuantity
			, trctDelNy
			<include refid="insertRegMod"/>
		) VALUES (
			#{ifmmSeq}
			, #{trprSeq}
			, #{trctQuantity}
			, 0
			<include refid="insertRegModValue"/>
		)
	</insert>
	<delete id="deleteCartGeneral">
	DELETE FROM
		tradCart
	WHERE 1=1
		AND ifmmSeq = #{ifmmSeq}
		AND trprSeq = #{trprSeq}
	</delete>
	
	<select id="selectListWishList" resultMap="resultMapObj">
	SELECT
		a.trpdSeq
		, b.trpdName
		, b.trpdPrice
		, b.trpdDeliveryFee
		, c.path
		, c.uuidName
	FROM
		tradWishList a
	LEFT JOIN
		tradProduct b 
	ON 
		b.trpdSeq = a.trpdSeq
	LEFT JOIN
		tradProductUploaded c
	ON
		c.pseq = b.trpdSeq AND c.defaultNy = 1
	WHERE 1=1
		AND ifmmSeq = #{ifmmSeq}
	GROUP BY
		a.trpdSeq
	</select>
	
	<insert id="insertWishList">
	INSERT INTO
		tradWishList (
			ifmmSeq
			, trpdSeq
			, trwlUseNy
			, trwlDelNy
		) VALUES (
			#{ifmmSeq}
			, #{trpdSeq}
			, 1
			, 0
		)
	</insert>
	
	<delete id="deleteWishList">
	DELETE FROM
		tradWishList
	WHERE 1=1
		AND ifmmSeq = #{ifmmSeq}
		AND trpdSeq = #{trpdSeq}
	</delete>
	
	<select id="selectListUploaded" resultMap="resultMapObj">
	SELECT
		seq
		, type
		, defaultNy
		, sort
		, originalName
		, uuidName 
		, ext
		, size
		, delNy
		, pseq
		, path
	FROM
		tradProductUploaded
	WHERE
		pseq = #{trpdSeq}
	</select>
	
	<select id="selectListOptions" resultMap="resultMapObj">
		SELECT
			b.tropSeq
			, b.tropName
			, c.trocSeq
			, c.trocName
			, c.trocAdditionalPrice
		FROM 
			tradProduct a
		LEFT JOIN 
			tradOptionParent b 
		ON  
			(b.tropSeq = a.trpdOptionParentCd1) 
			OR (b.tropSeq = a.trpdOptionParentCd2)
			OR (b.tropSeq = a.trpdOptionParentCd3)
		LEFT JOIN 
			tradOptionChild c
		ON 
			c.tropSeq = b.tropSeq
		WHERE 
			a.trpdSeq = #{trpdSeq}
	</select>
	
	<select id="selectOneProduct_Real" resultMap="resultMapObj">
	
		SELECT
			b.trprSeq
			, b.trpdSeq
			, b.trprOptionChildCd1
			, b.trprOptionChildCd2
			, b.trprOptionChildCd3
			, b.trprListPrice
			, b.trprDiscountPrice
			, b.trprStock
		FROM
			tradProduct a
		LEFT JOIN
			tradProduct_Real b
		ON 
			b.trpdSeq = a.trpdSeq
		WHERE 1=1
			AND a.trpdSeq = #{trpdSeq}
		<if test="trprOptionChildCd1 != null">
			AND b.trprOptionChildCd1 = #{trprOptionChildCd1}
		</if>
		<if test="trprOptionChildCd2 != null">
			AND b.trprOptionChildCd2 = #{trprOptionChildCd2}
		</if>
		<if test="trprOptionChildCd3 != null">
			AND b.trprOptionChildCd3 = #{trprOptionChildCd3}
		</if>
			
			
	
	
	</select>
	
	<!-- 옵션값 메모리에 올리기 s -->
	<!-- 
	<select id="optionParentForCache" resultMap="resultMapObj">
		SELECT
			tropSeq
			, tropName 
		FROM 
			tradOptionParent
		WHERE 1=1
			AND tropDelNy = 0
			AND tropUseNy = 1
		ORDER BY
			tropOrder
	</select>
	<select id="optionChildForCache" resultMap="resultMapObj">
		SELECT
			trocSeq
			, trocName
			, tropSeq
		FROM 
			tradOptionChild
		WHERE 1=1
			AND trocDelNy = 0
			AND trocUseNy = 1
		ORDER BY
			trocOrder
	</select>
	 -->
	<!-- 옵션값 메모리에 올리기 s -->
	
	<!-- INSERT -->
	<sql id="insertRegMod">
		<!-- , regIp
		, regSeq
		, regDeviceCd -->
		, regDateTime
		<!-- , regDateTimeSvr
		, modIp
		, modSeq
		, modDeviceCd -->
		, modDateTime
		<!-- , modDateTimeSvr -->
	</sql>
	
	<sql id="insertRegModValue">
		<!-- ,#{regIp}
		,#{regSeq}
		,#{regDeviceCd} -->
		,#{regDateTime}
		<!-- ,#{regDateTimeSvr}
		,#{modIp}
		,#{modSeq}
		,#{modDeviceCd} -->
		,#{modDateTime}
		<!-- ,#{modDateTimeSvr} -->
	</sql>
	
	<sql id="insertReg">
		<!-- , regIp
		, regSeq
		, regDeviceCd -->
		, regDateTime
		<!-- , regDateTimeSvr -->
	</sql>
	
	<sql id="insertRegValue">
		<!-- ,#{regIp}
		,#{regSeq}
		,#{regDeviceCd} -->
		,#{regDateTime}
		<!-- ,#{regDateTimeSvr} -->
	</sql>
	
	
	
	<insert id="insertProduct">
	INSERT INTO
		tradProduct (
			trpdName
			, trpdCategoryCd1
			, trpdCategoryCd2
			, trpdCategoryCd3
			, trpdOptionParentCd1
			, trpdOptionParentCd2
			, trpdOptionParentCd3
			, trpdPrice
			, trpdDeliveryFee
			, trpdTag
			, trpdDesc
			, trpdDelNy
		<include refid="insertRegMod"/>
		) VALUES (
			#{trpdName}
			, #{trpdCategoryCd1}
			, #{trpdCategoryCd2}
			, #{trpdCategoryCd3}
			, 0
			, 0
			, 0
			, #{trpdPrice}
			, 0
			, #{trpdTag}
			, #{trpdDesc}
			, 0
		<include refid="insertRegModValue"/>
		)
		
		<selectKey resultType="String" keyProperty="trpdSeq" order="AFTER">
		SELECT last_insert_id()
		</selectKey>
		
	</insert>
	
	<insert id="insertOptionParent">
	INSERT INTO
		tradOptionParent (
			tropName
			, trpdSeq
			, tropOrder
			, tropUseNy
			, tropDelNy
		<include refid="insertRegMod"/>
		) VALUES (
			#{tropName}
			, #{trpdSeq}
			, #{tropOrder}
			, 1
			, 0
		<include refid="insertRegModValue"/>
		)
		
		<selectKey resultType="String" keyProperty="tropSeq" order="AFTER">
		SELECT last_insert_id()
		</selectKey>
		
	</insert>
	
	<update id="updateOptionParentCd">
	UPDATE 
		tradProduct
	SET
		trpdOptionParentCd1 = (SELECT tropSeq FROM tradOptionParent WHERE trpdSeq = #{trpdSeq} AND tropOrder = 1)
		, trpdOptionParentCd2 = (SELECT tropSeq FROM tradOptionParent WHERE trpdSeq = #{trpdSeq} AND tropOrder = 2)
		, trpdOptionParentCd3 = (SELECT tropSeq FROM tradOptionParent WHERE trpdSeq = #{trpdSeq} AND tropOrder = 3)
	WHERE 1=1
		AND trpdSeq = #{trpdSeq}
		
	</update>
	
	<insert id="insertOptionChild">
	INSERT INTO
		tradOptionChild (
			tropSeq
			, trocName
			, trpdSeq
			, trocOrder
			, trocAdditionalPrice
			, trocUseNy
			, trocDelNy
			<include refid="insertRegMod"/>
		) VALUES (
			#{tropSeq}
			, #{trocName}
			, #{trpdSeq}
			, #{trocOrder}
			, #{trocAdditionalPrice}
			, 1
			, 0
			<include refid="insertRegModValue"/>
		)
		
		<selectKey resultType="String" keyProperty="trocSeq" order="AFTER">
		SELECT last_insert_id()
		</selectKey>
	
	</insert>
	
	
	<insert id="insertProduct_Real">
	INSERT INTO
		tradProduct_Real (
			trpdSeq	
			, trprOptionChildCd1
			, trprOptionChildCd2
			, trprOptionChildCd3
			, trprListPrice
			, trprDiscountPrice
			, trprStock
			, trprUseNy
			, trprDelNy
		) VALUES (
			#{trpdSeq}
			, #{trprOptionChildCd1}
			, #{trprOptionChildCd2}
			, #{trprOptionChildCd3} 
			, #{trprListPrice}
			, #{trprDiscountPrice}
			, #{trprStock}
			, #{trprUseNy}
			, #{trprDelNy}
		)
	</insert>
	
	
	<!-- uploaded s -->
	<insert id="insertProductUploaded">
	INSERT INTO ${tableName} (
		type
		, defaultNy
		, sort
		, originalName
		, uuidName
		, ext
		, size
		, delNy
		<include refid="insertReg"/>
		, pseq
		, path
	) VALUES (
		#{type}
		, #{defaultNy}
		, #{sort}
		, #{originalName}
		, #{uuidName}
		, #{ext}
		, #{size}
		, 0
		<include refid="insertRegValue"/>
		, #{pseq}
		, #{path}
	)
	</insert>
	<!-- uploaded e -->
	
	<select id="selectOneMemberCheckOut" resultMap="resultMapObj">
	SELECT
		a.ifmmName
		, b.ifmeEmailFull
		, c.ifmpNumber
		, d.ifmaAddress1
		, d.ifmaAddress2
	FROM
		infrMember a
	LEFT JOIN
		infrMemberEmail b ON b.ifmmSeq = a.ifmmSeq
        AND b.ifmeDefaultNy = 1
	LEFT JOIN
		infrMemberPhone c ON c.ifmmSeq = a.ifmmSeq 
        AND c.ifmpDeviceCd = 26
        AND c.ifmpDefaultNy = 1
	LEFT JOIN
		infrMemberAddress d ON d.ifmmSeq = a.ifmmSeq
        AND d.ifmaDefaultNy = 1
        AND d.ifmaTypeCd = 42
	WHERE 1=1
		AND a.ifmmSeq = #{ifmmSeq}
	</select>
	
	<select id="selectListShippingAddress" resultMap="resultMapObj">
	SELECT
		ifsaSeq
		, ifsaName
		, ifsaAddress1
		, ifsaAddress2
		, ifsaZipCode
		, ifsaContact
		, ifsaDefaultNy
	FROM
		infrShippingAddress
	WHERE 1=1
		AND ifmmSeq = #{ifmmSeq}
		AND ifsaDelNy = 0
	</select>
	
	<select id="selectOneShippingAddress" resultMap="resultMapObj">
	SELECT
		ifsaSeq
		, ifsaName
		, ifsaAddress1
		, ifsaAddress2
		, ifsaZipCode
		, ifsaContact
		, ifsaDefaultNy
	FROM
		infrShippingAddress
	WHERE 1=1
		AND ifmmSeq = #{ifmmSeq}
		AND ifsaSeq = #{ifsaSeq}
		AND ifsaDelNy = 0
	</select>
	
	<insert id="insertShippingAddress">
	INSERT INTO
	infrShippingAddress (
		ifmmSeq
		, ifsaName
		, ifsaAddress1
		, ifsaAddress2
		, ifsaZipCode
		, ifsaContact
		, ifsaDefaultNy
		, ifsaDelNy
		<include refid="insertRegMod"/>
	) VALUES (
		#{ifmmSeq}
		, #{ifsaName}
		, #{ifsaAddress1}
		, #{ifsaAddress2}
		, #{ifsaZipCode}
		, #{ifsaContact}
		, #{ifsaDefaultNy}
		, 0
		<include refid="insertRegModValue"/>
	)
	</insert>
	
	<update id="updateShippingAddress">
	UPDATE
		infrShippingAddress
	SET
		ifsaName = #{ifsaNameEdit}
		, ifsaAddress1 = #{ifsaAddress1Edit}
		, ifsaAddress2 = #{ifsaAddress2Edit}
		, ifsaZipCode = #{ifsaZipCodeEdit}
		, ifsaContact = #{ifsaContactEdit}
		, ifsaDefaultNy = #{ifsaDefaultNyEdit}
	WHERE 1=1
		AND ifmmSeq = #{ifmmSeq}
		AND ifsaSeq = #{ifsaSeqEdit}
	</update>
	
	<delete id="deleteShippingAddress">
	DELETE FROM infrShippingAddress
	WHERE 1=1
		AND ifmmSeq = #{ifmmSeq}
		AND ifsaSeq = #{ifsaSeqEdit}
	</delete>
	
	<update id="updateShippingDefaultNy">
	UPDATE 
		infrShippingAddress
	SET 
		ifsaDefaultNy = 0 
	WHERE 1=1
		AND ifmmSeq = #{ifmmSeq};
	</update>
	<!-- 
	<update id="updateListProductCheckOut">
	UPDATE
		tradCart
	SET
		trctQuantity = #{trctQuantity}
	WHERE 1=1
		AND trctSeq = #{trctSeq}
	</update>
	
	<select id="selectListProductCheckOut" resultMap="resultMapObj">
	
	SELECT
		a.trctSeq
		, a.ifmmSeq
		, c.trpdSeq
		, a.trprSeq
		, a.trctQuantity
		, a.trctDelNy
	    , c.trpdName
	    , b.trprOptionChildCd1
	    , (SELECT trocName FROM tradOptionChild WHERE trocSeq = b.trprOptionChildCd1) as trprOptionChildName1
	    , b.trprOptionChildCd2
	    , (SELECT trocName FROM tradOptionChild WHERE trocSeq = b.trprOptionChildCd2) as trprOptionChildName2
	    , b.trprOptionChildCd3
	    , (SELECT trocName FROM tradOptionChild WHERE trocSeq = b.trprOptionChildCd3) as trprOptionChildName3
	    , b.trprListPrice
	    , b.trprDiscountPrice
	    , c.trpdDeliveryFee
	    , d.uuidName
        , d.path
	FROM
		tradCart a
	LEFT JOIN
		tradProduct_Real b 
	ON 
		b.trprSeq = a.trprSeq
	LEFT JOIN
		tradProduct c
	ON 
		c.trpdSeq = b.trpdSeq
	LEFT JOIN
		tradProductUploaded d
	ON
		d.pseq = c.trpdSeq AND d.defaultNy = 1
	WHERE 1=1
		AND ifmmSeq = #{ifmmSeq}
	
	</select>
	 -->
</mapper>